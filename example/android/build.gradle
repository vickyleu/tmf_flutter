buildscript {
    ext.kotlin_version = '1.8.21'
    repositories {
        google()
        mavenCentral()
        maven {
            url = uri("https://mirrors.cloud.tencent.com/gradle/")
        }
        maven {
            url = uri("https://mirrors.cloud.tencent.com/nexus/repository/maven-public/")
        }
        maven {
            url = uri("https://maven.aliyun.com/repository/gradle-plugin")
        }
        maven {
            url = uri("https://t.pinpad.qq.com/fHKFBbEjd/repository/maven-public/")
            //本地maven不能添加如下验证，否则会包错误：Authentication scheme 'basic'(BasicAuthentication) is not supported by protocol 'file
            //主要是因为上面的url采用变量的形式
            credentials {
                username = "tmf_read"
                password = "psnBSt@BVMva6#&^"
            }
            authentication {
                basic(BasicAuthentication)
//                create<BasicAuthentication>("basic")
            }
        }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:7.3.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.tencent.tmf.android:portal-gradle-plugin:3.0.1.0-669--SNAPSHOT"
        classpath "com.huawei.agconnect:agcp:1.8.1.300"
    }
}

allprojects {

    repositories {
        google()
        mavenCentral()
        maven {
            url = uri("https://mirrors.cloud.tencent.com/nexus/repository/maven-public/")
        }
        maven {
            url = uri("https://mirrors.cloud.tencent.com/flutter/download.flutter.io/")
        }
        maven {
            url = uri("https://t.pinpad.qq.com/fHKFBbEjd/repository/maven-public/")
            //本地maven不能添加如下验证，否则会包错误：Authentication scheme 'basic'(BasicAuthentication) is not supported by protocol 'file
            //主要是因为上面的url采用变量的形式
            credentials {
                username = "tmf_read"
                password = "psnBSt@BVMva6#&^"
            }
            authentication {
                basic(BasicAuthentication)
//                create<BasicAuthentication>("basic")
            }
        }
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
